resources:
  - name: source-code
    type: git
    icon: git
    check_every: 2m
    source:
      uri: "https://github.com/palanisamy-hari/my-node-js-app.git"
      branch: "main"
     

jobs:
- name: deploy-app
  serial: true
  plan:
  - get: source-code
    trigger: true
  - task: deploy-app-heroku
    params:
      HEROKU_EMAIL: ((heroku-email))
      HEROKU_TOKEN: ((heroku-token))
    config:
      platform: linux

      image_resource:
        type: docker-image
        source: { repository: concourse/bosh-cli }

      inputs:
        - name: source-code

      run:
        path: sh
        dir: source-code
        args:
          - -exc
          - |
            cat > /root/.netrc <<EOF
            machine git.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_TOKEN
            EOF
            git push  https://git.heroku.com/stark-castle-29113.git main:refs/heads/main      

- name: sonar-qualitygate
  plan:
  - in_parallel:
    - get: source-code
      trigger: true
      passed: [deploy-app]
  - task: check-sonarqube-quality-gate
    params:
      SONAR_HOST: ((sonar-host))
      SONAR_TOKEN: ((sonar-token))
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: sonarsource/sonar-scanner-cli
          tag: 4
      inputs:
      - name: source-code
      run:
        path: sh
        dir: source-code
        args:
        - -ec
        - |
          sonar-scanner \
            -Dsonar.projectKey=my-node-js-app \
            -Dsonar.sources=. \
            -Dsonar.host.url=$SONAR_HOST \
            -Dsonar.login=$SONAR_TOKEN
- name: ui-test
  public: true
  plan:
    - get: source-code
      trigger: true
      passed: [sonar-qualitygate]
    - task: run-tests
      params:
        LAMBDA_USER: ((lambda-email))
        LAMBDA_TOKEN: ((lambda-token))
      config:
        image_resource:
          type: registry-image
          source: { repository: ruby, tag: 2.5.8 }
        platform: linux
        inputs:
          - name: source-code
        run:
          path: /bin/bash
          args:
            - -c
            - |
              cd "source-code/ci/ci-test"
              bundle install
              bundle exec ruby smoke-test.rb
